# NGINX config for centos 8 with
# * auth_request
# * uWSGI service ngx_auth_services reachable via http://127.0.0.1:5000
# * and protected resource under /protected/ usable by PHP

server {
    listen 80;
    listen [::]:80;
    server_name mysrv.mydom.zz;

    # enforce https
    return 301 https://$server_name:443$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name mysrv.mydom.zz;

    ssl_certificate        /etc/pki/tls/certs/mysrv.mydom.zz.crt;
    ssl_certificate_key    /etc/pki/tls/private/mysrv.mydom.zz.key;
    ssl_protocols          TLSv1.3 TLSv1.2;
    ssl_ciphers            EECDH+AESGCM:EDH+AESGCM;

    #root         /usr/share/nginx/html;
    root  /var/www/mysrv.mydom.zz;

    # own logging
    error_log   /var/log/nginx/mysrv.mydom.zz-error.log;
    access_log  /var/log/nginx/mysrv.mydom.zz-access.log  main;

    # open access
    location / {
    }

    # protected resource
    location  /protected/ {
        auth_request /auth;             # The sub-request to use
        error_page 401 = @error401;     # Specific login page to use

        #auth_request_set $authuser $upstream_http_as_x_username;       # Make the sub request data available
        auth_request_set $authuser $upstream_http_as_x_uid;     # Make the sub request data available
        auth_request_set $authuser_c $upstream_http_as_x_uid_count;     # Make the sub request data available
        auth_request_set $groups $upstream_http_as_x_groups;    # Make the sub request data available
        auth_request_set $groups_c $upstream_http_as_x_groups_count;    # Make the sub request data available

        #proxy_pass http://sample.com:8080/hello;       # actual location of protected data
        proxy_set_header X-Forwarded-Host $host;        # Custom headers with authentication related data
        proxy_set_header X-Remote-User $authuser;

        #include /etc/nginx/default.d/*.conf;
        index index.php index.html index.htm;

        location ~ \.(php|phar)(/.*)?$ {
            fastcgi_split_path_info ^(.+\.(?:php|phar))(/.*)$;

            fastcgi_intercept_errors on;
            fastcgi_index  index.php;
            include        fastcgi_params;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            fastcgi_param  PATH_INFO $fastcgi_path_info;

        fastcgi_param  REMOTE_USER $authuser;
        fastcgi_param  REMOTE_USER_C $authuser_c;
        fastcgi_param  REMOTE_GROUPS $groups;
        fastcgi_param  REMOTE_GROUPS_C $groups_c;

            fastcgi_pass   php-fpm;
        }
    }

    # auth_request location
    location = /auth {
        internal;
        # authentication service of SAML authentication
        proxy_pass http://127.0.0.1:5000/auth_services/auth_saml/auth_check;    # authentication server

        proxy_pass_request_body off;                            # no data is being transferred...
        proxy_set_header Content-Length "";
        proxy_set_header X-Origin-URI $request_uri;
        proxy_set_header Host $host;                            # Custom headers with authentication related data
        #proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded $request_uri;
        proxy_set_header X-My-Real-IP $remote_addr;             # Additional parameters to send to login page
        proxy_set_header X-My-Real-Port $remote_port;
        proxy_set_header X-My-Server-Port $server_port;

        # forward cookie if we've got one
        #if ($http_cookie ~* "shopware_sso_token=([^;]+)(?:;|$)") {
        #    set $token "$1";
        #}
        #proxy_set_header X-SHOPWARE-SSO-Token $token;
    }

    # If the user is not logged in, redirect them to login URL
    location @error401 {
        # Login URL of SAML authentication
        return 302 https://mysrv.mydom.zz/auth_services/auth_saml/sso?url=https://$http_host$request_uri;
    }

    # Our local authentication service. 
    location /auth_services/ {
        proxy_pass http://127.0.0.1:5000;       # authentication server
        proxy_set_header Host $host;                            # Custom headers with authentication related data
        proxy_set_header X-Origin-URI $request_uri;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded $request_uri;
        proxy_set_header X-My-Real-IP $remote_addr;             # Additional parameters to send to login page
        proxy_set_header X-My-Real-Port $remote_port;
        proxy_set_header X-My-Server-Port $server_port;
    }

    # open access
    location /auth_services/auth_saml/metadata {
        proxy_pass http://127.0.0.1:5000;       # Where the metadata are.
        proxy_set_header X-My-Real-IP $remote_addr;
        proxy_set_header X-My-Real-Port $remote_port;
        proxy_set_header X-My-Server-Port $server_port;
    }
}
